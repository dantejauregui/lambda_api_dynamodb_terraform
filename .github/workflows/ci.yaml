name: ci

on:
  push:
    branches:
      - main
    paths:
      - '**.py'  # Trigger when any Python file changes
      - 'Dockerfile'  # Trigger when Dockerfile changes
    
env:
  PYTHON_WORKING_DIRECTORY: "python"
  ECR_REPOSITORY: "my-lambda-image"
  AWS_REGION: 'eu-central-1'
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub repository'
      uses: actions/checkout@v4
    
    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

    - name: Build Docker Image
      working-directory: ${{ env.PYTHON_WORKING_DIRECTORY }}
      run: docker build -t ${{ env.ECR_REPOSITORY }} .
    
    - name: Push Docker Image to ECR
      run: |
          docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}