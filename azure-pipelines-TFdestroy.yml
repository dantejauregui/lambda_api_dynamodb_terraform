trigger: none  # Manual trigger only

name: 'terraform-destroy'

variables:
  - group: aws-credentials

  - name: ECR_REPOSITORY
    value: "my-lambda-image"
  - name: AWS_REGION
    value: "eu-central-1"
  - name: IMAGE_TAG
    value: "latest"
  - name: TF_VERSION
    value: "1.6.0"
  - name: TERRAFORM_WORKING_DIRECTORY
    value: "lambda_api_dynamoDB"
  - name: ENVIRONMENT_NAME
    value: "dev"
  - name: TF_S3_BUCKET_BACKEND_NAME
    value: "terraform-state-27066"

stages:
- stage: Destroy_Dev
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: terraform_destroy_dev
    displayName: 'Destroy Terraform Infra in AWS'
    pool:
      name: local-mac-pool

    steps:
    - checkout: self
      clean: true

    # we change to this long task-name because there was a Conflict of naming between plugins: TerraformInstaller@1 and TerraformCLI@0:
    #- task: TerraformInstaller@1
    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'

    - task: TerraformCLI@0
      displayName: 'Terraform Init'
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/$(TERRAFORM_WORKING_DIRECTORY)'
        backendType: 's3'
        ensureBackend: true
        #environmentServiceNameAWS: 'azuredevops_aws'  # looks like we don't need to use this for our actual service connection
        commandOptions: >
          -backend-config="bucket=$(TF_S3_BUCKET_BACKEND_NAME)"
          -backend-config="key=terraform/state.tfstate"
          -backend-config="region=$(AWS_REGION)"

    - task: TerraformCLI@0
      displayName: 'Terraform Destroy'
      inputs:
        command: 'destroy'
        workingDirectory: '$(System.DefaultWorkingDirectory)/$(TERRAFORM_WORKING_DIRECTORY)'
        commandOptions: >
          -auto-approve
          -var="lambda_image_uri=$(AWS_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/$(ECR_REPOSITORY):$(IMAGE_TAG)"
        environmentServiceNameAWS: 'azuredevops_aws'
